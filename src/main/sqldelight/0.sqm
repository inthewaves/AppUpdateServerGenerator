import org.grapheneos.appupdateservergenerator.model.Base64String;
import org.grapheneos.appupdateservergenerator.model.PackageName;
import org.grapheneos.appupdateservergenerator.model.UnixTimestamp;
import org.grapheneos.appupdateservergenerator.model.VersionCode;

/** Represents an app in the database */
CREATE TABLE App (
    packageName TEXT AS PackageName NOT NULL PRIMARY KEY,
    label TEXT,
    lastUpdateTimestamp INTEGER AS UnixTimestamp NOT NULL
);
CREATE INDEX Index_App_packageName_label ON App(packageName, label);

/**
 * Represents the release for an app.
 */
CREATE TABLE AppRelease (
    packageName TEXT AS PackageName NOT NULL REFERENCES App(packageName) ON DELETE CASCADE,
    versionCode INTEGER AS VersionCode NOT NULL,
    versionName TEXT NOT NULL,
    minSdkVersion INTEGER AS Int NOT NULL,
    /** The [UnixTimestamp] of the release. Note: This can change if the release notes are edited, for example. */
    releaseTimestamp INTEGER AS UnixTimestamp NOT NULL,
    /** A sha256 checksum of the APK. This should be checked by clients. */
    apkSha256 TEXT AS Base64String NOT NULL,
    /** A sha256 checksum of the APK Signature Scheme v4 signature. If this is null, the APK wasn't
signed using the v4 scheme; otherwise, clients should expect to find the `.apk.idsig` file next to the APK. */
    v4SigSha256 TEXT AS Base64String,
    /** If the APK has a `static-library` tag, this is its `android:name` attribute. */
    staticLibraryName TEXT,
    /** If the APK has a `static-library` tag, this is its `android:version` and android:versionMajor attributes combined. */
    staticLibraryVersion INTEGER AS VersionCode,
    /** Optional release notes for this release. This can be in Markdown (flavor configured in
[org.grapheneos.appupdateservergenerator.api.MarkdownProcessor]) or HTML. Contents will be
compressed during metadata generation, but contents in the database are left as is. */
    releaseNotes TEXT,
    PRIMARY KEY(packageName, versionCode)
);
CREATE INDEX AppRelease_covering ON AppRelease(
    packageName,
    versionCode,
    versionName,
    minSdkVersion,
    releaseTimestamp,
    apkSha256,
    v4SigSha256,
    staticLibraryName,
    staticLibraryVersion,
    releaseNotes
);
